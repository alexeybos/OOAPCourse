Грустно, но тут конечно полное фиаско.
И здесь самое главное - я не понимаю, это у меня просто не настолько абстрактный взгляд на АТД или я вообще не понимаю основной принцип?

В первоначальном варианте я начал реализовывать intersection() и union() как запросы, но остановился и удалил из
конечного решения из-за нерешенного вопроса - а как в реализации доставать (итеративно) элементы из множества.
У HashTable нет публичного метода получения значения(-й) - только get() проверка наличия значения в таблице.
А мы же не можем без явного объявления в АСД public метода получить доступ к внутренностям класса.
В общем, пришел к выводу, что получается, что без метода получения значений из множества данные методы нереализуемы. И почему-то решил, что в АТД эти методы (union, etc.) не нужны.
И я ведь до сих пор не понял, как же мне правильно объявить (и реализовать) АСД, чтобы получить список значений.

Я сделал новый вариант с реализацией (в качестве работы над ошибками), где добавил в HashTable (в АТД и реализацию) метод public List<T> getValues() чтобы иметь возможность получить значения.
Или же правильнее в реализации АТД HashTable использовать implements Iterable<T>? И никак не трогать при этом сам АТД HashTable.

Ну и по методу put(). В решении предусмотрел его изменение относительно HashTable, т.к. (исходя из описания в курсе АСД) предполагалось,
что HashTable не запрещает вставку одинаковых значений (хотя в своей реализации я это предусматривал) и решил прописать это явно в требованиях.
