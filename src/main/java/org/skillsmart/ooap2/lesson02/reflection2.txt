Кажется, что формально приведенные мной примеры корректны, однако для случая расширения судя по всему я не прав фундаментально.
Так можно сделать технически, но логически наследование конечно должно быть обратным - четырехугольник -> прямоугольник (специализация класса-родителя).
Для примера расширения класса-родителя конечно нужно было придумать другой пример, что-то вроде
Animal {
  eat();
  sleep();
}
Cat extends Animal {
  ruleHumans();
}
Когда класс наследник имеет все, что родитель, но приобретает дополнительные возможности (ruleHumans())

Пример с квадратом (специализация класса-родителя) корректен.