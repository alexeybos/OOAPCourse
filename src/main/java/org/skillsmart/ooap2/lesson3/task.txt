В Java концепция "класс как модуль" поддерживается следующим образом:

1. Класс - базовый модуль. Каждый публичный класс содержится в своем файле *.java.

2. Пакет (package) - Отдельные классы можно "упаковывать" в пакеты. Пакеты в Java - это суть пространства имен, позволяющие структурировать проект и создавать
уникальные имена классов через пространство имен (т.е. имена классов могут быть одинаковыми, но принадлежать разным пакетам). Обеспечивают контроль доступа к классам, их полям и методам.
При объявлении класса указывается имя пакета, к которому он принадлежит. Если эту строчку не указать, то класс будет размещен в "безымянном пакете" (unnamed package)
Для включения в свой код класса из другого пакета необходимо в секции import указать путь к подключаемому классу (т.е. иерархически наименования всех пакетов, в которые входит класс, начиная с корня)

3. Сборка, библиотека - скомпилированные классы с ресурсами в JAR и WAR файлах. Данные файлы можно подключать к своему коду через зависимости.
Управление зависимостями осуществляется с помощью утилит управления зависимостями, например Maven или Gradle.

4. Начиная с Java 9 добавился новый способ управления структурой приложения - модули (JPMS). Содержит набор пакетов,
объявляет свои зависимости от других модулей и какие пакеты экспортирует. Позволяет строго контролировать видимость и доступ к внутренним структурам.
Честно говоря, сам я пока мало экспериментировал с модулями, т.к. мы в нашем проекте только недавно перешли с Java 8.

